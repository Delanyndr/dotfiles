1. Pre-installation 
	a. Make bootable .iso and verify signature 
	b. Once in live, verify boot mode is efi: ls /sys/firmware/efi/efivars
    c. Ping archlinux.org to verify internet connection. If need wifi, can use wifi-menu
    d. update system clock: timedatectl set-ntp true

2. Partition Drives
    a. List partitions: fdisk -l
	a. fdisk /dev/sdX
	b. make GPT partitions for... 
		i. efi 550M, should have part type 'EFI System'
		ii. SWAP generally equal to RAM + SQRT(RAM) (ex. 16GB RAM = 20GB Swap) 
		iii. / (root) rest of drive
	c. format efi/root partitions: 
        i.  efi: mkfs.fat -F32 /dev/sdXx
        ii. root: mkfs.ext4 /dev/sdXx
	d. designate swap partition: mkswap /dev/<swp> && swapon /dev/<swp>;
	e. mount drives
		i. mount /dev/<root> /mnt
		iii. mkdir /mnt/boot; mount /dev/<efi> /mnt/boot;

3. Install Arch
    a. Sort /etc/pacman.d/mirrorlist so that closer mirrors are at the top.
    b. Intall base packages: pacstrap /mnt base <base-devel> ... 

4. Configure system
    a. make fstab: genfstab -U /mnt >> /mnt/etc/fstab
    b. Jump into arch install: arch-chroot /mnt 
    c. Set time zone: ln -sf /usr/share/zoneinfo/America/<City> /etc/localtime
    d. Run hwclock: hwclock --systohc
    e. Uncomment 'en_US.UTF-8' in /etc/locale.gen then run: locale-gen
    f. Set LANG: echo "LANG=en_US.UTF-8" > /etc/locale.conf
    g. Set root password: passwd
    h. Enable TRIM for ssd: systemctl enable fstrim.timer
    i. Add users: useradd -m -g users -G wheel jake; passwd jake
    j. Grant user sudo privlages: visudo, uncomment wheel entry of choice. 
    k. disable root user: passwd -l root
    
5. Configure network
    a. Set hostname: echo "hostname" > /etc/hostname
    b. Add matching entries to /etc/hosts 
        127.0.0.1   localhost
        ::1         localhost
        127.0.1.1   myhostname.localdomain myhostname
    c. Network configuration on wiki.
    d. [Optional] instead of above, install networkmanager and start/enable NetworkManager.service

6. Install & configure bootloader
    a. Run: pacman -S intel-ucode
    b. For systemd-boot, install using: bootctl --path=/boot install
    c. Ensure updated with: bootctl update
        - For pacman hooks to autoupdate systemd-boot, add the following to /etc/pacman.d/hooks/100-systemd-boot.hook
            [Trigger]
            Type = Package
            Operation = Upgrade
            Target = systemd

            [Action]
            Description = Updating systemd-boot
            When = PostTransaction
            Exec = /usr/bin/bootctl update
        - Could install systemd-boot-pacman-hook instead 
    d. Config file at /boot/loader/loader.conf [see wiki for options]
        - e.x.  default arch
                timeout 4
                console-mode max
                editor no
    e. Add loader: /boot/loader/entries/arch.conf
        - e.x.  title Arch Linux
                linux /vmlinuz-linux
                initrd /intel-ucode.img
                initrd /initramfs-linux.img
                options root=LABEL=arch_os rw (must label root to arch_os in fdisk)
        - options alternative: echo "options root=PARTUUID=$(blkid -s PARTUUID -o value /dev/<root>) rw" >> /boot/loader/entries/arch.conf 
		

9. 'exit' back to iso, unmount drives 'umount -R /mnt'; reboot; and remove iso. 

====== Post Install ======

1. Set up network and firewall, install browser and follow archwiki general recommendations. 

2. Notes on GUI
