1. Pre-installation 
	a. Make bootable .iso and verify signature 
	b. Check if EFI or BIOS: ls /sys/firmware/efi/efivars
    c. Ping archlinux.org to verify internet connection. If need wifi, can use wifi-menu
    d. Check system clock: timedatectl set-ntp true && timedatectl status
    NOTE: Try 'setfont tarcyrheb-sun32' if archiso font too small
          Alternatively, at archiso boot menu press 'tab' then nomodeset; video=1280x720

2. Partition Drives (EFI)
    a. List partitions: fdisk -l
	b. Start fdisk: fdisk /dev/sd<x>
	c. make GPT partitions for... 
		EFI: 550M, should have partition type 'EFI System'
		SWAP: generally equal to RAM
		ROOT: rest of drive
	d. format partitions: 
        EFI: mkfs.fat -F32 /dev/sdXx
        ROOT: mkfs.ext4 /dev/sdXx
	e. designate swap partition: mkswap /dev/<swp> && swapon /dev/<swp>
	f. mount drives
		mount /dev/<root> /mnt
        mkdir /mnt/boot
		mount /dev/<efi> /mnt/boot
    NOTE: (BIOS) Ignore EFI and set ROOT to 'Legacy BIOS Bootable'

3. Install Arch
    a. Sort /etc/pacman.d/mirrorlist so that closer mirrors are at the top
    b. Intall Arch: pacstrap /mnt base base-devel

4. Configure system
    a. make and check fstab: genfstab -U /mnt >> /mnt/etc/fstab
    b. Jump into arch install: arch-chroot /mnt 
    c. install vim and git
    d. Grab dotfiles: git clone 'https://github.com/gideonwashere/dotfiles.git'
    d. Uncomment 'en_US.UTF-8' in /etc/locale.gen
    e. run 'configure-arch.sh' from dotfiles
    f. (SSD Only) Enable TRIM: systemctl enable fstrim.timer
    g. Set root password: passwd
        
5. NetworkManager (lots of options for this NetworkManager is easiest) 
    a. Install networkmanager 
    b. start/enable NetworkManager.service
    NOTE: nmcli device wifi connect <SSID> password <pass> hidden yes

6. Install & configure bootloader
    a. Install intel-ucode
    b. (EFI) Run configure-systemd-boot.sh | (BIOS) See syslinux-notes.txt

7. 'exit' back to archiso, unmount drives 'umount -R /mnt', reboot, and remove iso.

====== Post Install ======
8. Users and Security 
    a. Add users: useradd -m -g users -G wheel jake; passwd jake
    b. Grant user sudo privlages: visudo, uncomment wheel entry of choice. 
    c. disable root user: passwd -l root (undo with sudo passwd -u root)
    NOTE: Be SURE sudo works right before you diable root password!

9. Install GUI:
    a. Install Xorg: 
            xorg-server | Graphical server
            xf86-video-<graphics> | Grapics driver (to check: lspci | grep -e VGA -e 3D)
            xorg-xwininfo | tool to query info about windows
            xorg-xrdb | allows use of .Xresources
            xorg-xinit | starts graphical server
            xorg-xprop | tool for detecting window props 
            xorg-xdpyinfo | Aids with resolution determination
            xorg-xbacklight | enables screen brightness controls
            xf86-input-synaptics | driver for touchpad
            copmton | compositor for xorg
            arandr | GUI for screen resolution
            termite | terminal emulator
    b. Install fonts: noto-fonts, -cjk, -emoji, -extra
    c. Install i3: 
            i3-gaps | i3 with gaps
            i3blocks | status bar
            i3lock | screen lock
            dmenu | runs commands and UI selection
            dunst | notification system
            feh | wallpaper setter
    d. Add 'status_command i3blocks' to ~/.config/i3/config 
    e. For inital HiDpi scaling: 
        - add 'Xft.dpi: 192' to ~/.Xresources
        - copy termite config: 'cp /etc/xdg/termite/config ~/.config/termite/' and increase font size
    e. Add to ~/.xinitrc then 'startx'
            #!/bin/sh
            [[ -f ~/.Xresources ]] && xrdb -merge ~/.Xresources            
            exec i3
    f. Install firefox: 
        - can now use Arch pages 'compton' 'xorg' 'i3blocks' and 'i3' to customize desktop 
        - check arch 'system maintenance' page for some good tips
        - recheck over 'general recommendations'

9. GNOME/Keyring gnome-keyring:
    a. add to /etc/pam.d/login
        auth optional pam_gnome_keyring.so
        session optional pam_gnome_keyring.so auto_start
    b. add to ~/.xinitrc
        eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
        export SSH_AUTH_SOCK

10. Other Packages for consideration:
    lightDM, slick greeter | mint desktop manager
    ntp | System Clock
    ranger | terminal file manager
    bc | terminal based calculator
    calcurse | terminal based calander 
    dosfstools | allows computer to access dos-like filesystems
    libnotify | allows desktop notifications
    exfat-utils | manage FAT drives
    mpd, mpc | music deamon and cli
    mpv | vidoe player
    ncmpcpp | ncurses music interface
    newsboat | RSS Client
    ntfs-3g | access NTFS partitions
    pulseaudio | audio system
    pusseaudio-alsa | interface with ALSA
    pulsemixer | ncurses audio controller
    socat | socket utility
    tmux | terminal multiplexer (for dropdown terminals)
    unrar, unzip | uncompress files
    xclip | allows copy/paste form command line
    xdotool | window action utilities on command line
    youtube-dl | download youtube vids
    zathura + plugins | document viewer
    poppler | edit pdfs
    mediainfo | shows audio/video information
    atool | manages archives
    fzf | fuzzy finder tool
    highlight | highlight code output
    nmcli-dmenu | manage NetwMan with dmenu networkmanager-demenu-git AUR
